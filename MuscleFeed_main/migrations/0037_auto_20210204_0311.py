# Generated by Django 3.1.2 on 2021-02-04 01:11

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('MuscleFeed_main', '0036_auto_20210129_0453'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderFreeze',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frozen_from', models.DateField(blank=True, null=True, verbose_name='Заморожено от')),
                ('frozen_to', models.DateField(blank=True, null=True, verbose_name='Заморожено до')),
                ('finished', models.BooleanField(blank=True, default=False, null=True, verbose_name='Заморозка закончена')),
            ],
            options={
                'verbose_name': 'Заморозка заказа',
                'verbose_name_plural': 'Заморозки заказов',
            },
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze',
            field=models.CharField(default='Заморозить', max_length=200, verbose_name='Заморозить'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze_he',
            field=models.CharField(default='Заморозить', max_length=200, null=True, verbose_name='Заморозить'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze_info',
            field=models.TextField(default='У вас есть возможность приостановить текущую программу, а после возобновить питание с удобной для вас даты. Заморозка текущего плана приведет к автоматической замене блюд после разморозки.', verbose_name='Информация о заморозке'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze_info_he',
            field=models.TextField(default='У вас есть возможность приостановить текущую программу, а после возобновить питание с удобной для вас даты. Заморозка текущего плана приведет к автоматической замене блюд после разморозки.', null=True, verbose_name='Информация о заморозке'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze_info_link',
            field=models.CharField(default='Подробнее', max_length=200, verbose_name='Подробнее'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze_info_link_he',
            field=models.CharField(default='Подробнее', max_length=200, null=True, verbose_name='Подробнее'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze_info_link_ru',
            field=models.CharField(default='Подробнее', max_length=200, null=True, verbose_name='Подробнее'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze_info_ru',
            field=models.TextField(default='У вас есть возможность приостановить текущую программу, а после возобновить питание с удобной для вас даты. Заморозка текущего плана приведет к автоматической замене блюд после разморозки.', null=True, verbose_name='Информация о заморозке'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='freeze_ru',
            field=models.CharField(default='Заморозить', max_length=200, null=True, verbose_name='Заморозить'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='frozen',
            field=models.CharField(default='Заморожено', max_length=200, verbose_name='Заморожено'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='frozen_he',
            field=models.CharField(default='Заморожено', max_length=200, null=True, verbose_name='Заморожено'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='frozen_ru',
            field=models.CharField(default='Заморожено', max_length=200, null=True, verbose_name='Заморожено'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='unfreeze',
            field=models.CharField(default='Разморозить', max_length=200, verbose_name='Разморозить'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='unfreeze_he',
            field=models.CharField(default='Разморозить', max_length=200, null=True, verbose_name='Разморозить'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='unfreeze_ru',
            field=models.CharField(default='Разморозить', max_length=200, null=True, verbose_name='Разморозить'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='will_be_frozen',
            field=models.CharField(default='Будет заморожено:', max_length=200, verbose_name='Будет заморожено:'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='will_be_frozen_he',
            field=models.CharField(default='Будет заморожено:', max_length=200, null=True, verbose_name='Будет заморожено:'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='will_be_frozen_ru',
            field=models.CharField(default='Будет заморожено:', max_length=200, null=True, verbose_name='Будет заморожено:'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='will_be_unfrozen',
            field=models.CharField(default='Будет разморожено:', max_length=200, verbose_name='Будет разморожено:'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='will_be_unfrozen_he',
            field=models.CharField(default='Будет разморожено:', max_length=200, null=True, verbose_name='Будет разморожено:'),
        ),
        migrations.AddField(
            model_name='accountpagesettings',
            name='will_be_unfrozen_ru',
            field=models.CharField(default='Будет разморожено:', max_length=200, null=True, verbose_name='Будет разморожено:'),
        ),
        migrations.AddField(
            model_name='order',
            name='extend_allowed',
            field=models.BooleanField(default=True, verbose_name='Разрешено продление'),
        ),
        migrations.AddField(
            model_name='question',
            name='about_freeze',
            field=models.BooleanField(default=False, verbose_name='О заморозке'),
        ),
        migrations.AlterField(
            model_name='order',
            name='phone',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Телефон'),
        ),
        migrations.AddField(
            model_name='order',
            name='freezes',
            field=models.ManyToManyField(blank=True, null=True, related_name='Заморозки', to='MuscleFeed_main.OrderFreeze'),
        ),
    ]
